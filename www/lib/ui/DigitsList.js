// Generated by CoffeeScript 1.6.1
(function() {
  var DigitsList, InteractiveList, db, views,
    _this = this;

  db = require('../core/db');

  InteractiveList = require('./InteractiveList');

  views = require('../core/views');

  DigitsList = (function() {

    function DigitsList(element, entries) {
      var _this = this;
      this.element = element;
      this.entries = entries;
      this.bind = function() {
        return DigitsList.prototype.bind.apply(_this, arguments);
      };
      this.onTap = function(target, data) {
        return DigitsList.prototype.onTap.apply(_this, arguments);
      };
      this.onSwipeEnd = function(target, data) {
        return DigitsList.prototype.onSwipeEnd.apply(_this, arguments);
      };
      this.onSwipeMove = function(target, data) {
        return DigitsList.prototype.onSwipeMove.apply(_this, arguments);
      };
      this.eventsHandler = _(new InteractiveList({
        element: element,
        entries: entries
      }));
      this.bind();
    }

    DigitsList.prototype.onSwipeMove = function(target, data) {
      var swipeObj;
      swipeObj = target.data('swipeObj');
      if (!swipeObj) {
        swipeObj = {
          swiping: true,
          direction: null,
          wrapper: target.parent()
        };
        target.data('swipeObj', swipeObj);
      }
      target.css({
        x: data.moved.x
      });
      if (data.moved.x > 0 && swipeObj.direction !== 'right') {
        swipeObj.wrapper.removeClass('swiping-right');
        swipeObj.wrapper.addClass('swiping-left');
        return target.data('swipeObj', swipeObj);
      } else if (data.moved.x < 0 && swipeObj.direction !== 'left') {
        swipeObj.wrapper.removeClass('swiping-left');
        swipeObj.wrapper.addClass('swiping-right');
        return target.data('swipeObj', swipeObj);
      }
    };

    DigitsList.prototype.onSwipeEnd = function(target, data) {
      var swipeObj, targetId;
      swipeObj = target.data('swipeObj');
      swipeObj.swiping = false;
      if (data.percent < 90) {
        target.transition({
          x: 0
        }, 200, function() {
          return swipeObj.wrapper.removeClass('swiping-left swiping-right');
        });
      } else {
        targetId = target.attr('data-id');
        db["delete"]('digits', {
          id: targetId
        });
        target.transition({
          x: '100%'
        }, 200, function() {
          return swipeObj.wrapper.animate({
            height: 0
          }, 200, function() {
            return $(this).remove();
          });
        });
      }
      return target.data('swipeObj', swipeObj);
    };

    DigitsList.prototype.onTap = function(target, data) {
      var digits;
      digits = target.attr('data-digits');
      return views.open('output', 'slide-right', null, false, digits);
    };

    DigitsList.prototype.bind = function() {
      var _this = this;
      this.eventsHandler.on('swipemove', function(target, data) {
        return _this.onSwipeMove(target, data);
      });
      this.eventsHandler.on('swipeend', function(target, data) {
        return _this.onSwipeEnd(target, data);
      });
      return this.eventsHandler.on('tap', function(target, data) {
        return _this.onTap(target, data);
      });
    };

    return DigitsList;

  })();

  module.exports = DigitsList;

}).call(this);
