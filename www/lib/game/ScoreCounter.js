// Generated by CoffeeScript 1.6.1
(function() {
  var ScoreCounter, addPointPause, classNames, debug, defaults, getByRole, renderer,
    _this = this;

  renderer = require('../core/renderer');

  getByRole = require('../helpers/dom').getByRole;

  debug = require('../core/debug');

  classNames = {
    active: 'active'
  };

  defaults = {
    targetsNum: 4
  };

  addPointPause = debug.get('fast') ? 10 : 800;

  ScoreCounter = (function() {

    function ScoreCounter(options) {
      var _this = this;
      this.increment = function(callback) {
        return ScoreCounter.prototype.increment.apply(_this, arguments);
      };
      this.render = function(wrapper) {
        return ScoreCounter.prototype.render.apply(_this, arguments);
      };
      options = $.extend(true, {}, defaults, options);
      this.targetsNum = options.targetsNum;
    }

    ScoreCounter.prototype.render = function(wrapper) {
      var context, i, _i, _ref;
      context = {
        targets: []
      };
      for (i = _i = 1, _ref = this.targetsNum; 1 <= _ref ? _i <= _ref : _i >= _ref; i = 1 <= _ref ? ++_i : --_i) {
        context.targets.push({});
      }
      this.element = $(renderer.render('partials/game/fish-counter', context));
      wrapper.append(this.element);
      return this.displays = getByRole('target-display', this.element);
    };

    ScoreCounter.prototype.increment = function(callback) {
      this.displays.not("." + classNames.active).first().addClass(classNames.active);
      if (typeof callback === 'function') {
        return setTimeout(callback, addPointPause);
      }
    };

    return ScoreCounter;

  })();

  module.exports = {
    ScoreCounter: ScoreCounter
  };

}).call(this);
